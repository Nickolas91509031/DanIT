/* 
Теоретичні питання
1. Як можна створити функцію та як ми можемо її викликати? 
1.Щоб створити функцію нам треба її оголосити. Спочатку ми пишемо function — це ключове слово (keyword), яке дає зрозуміти комп'ютеру, що далі буде оголошення функції. Потім — назву функції і список її параметрів в дужках (розділені комою). Якщо параметрів немає, ми залишаємо пусті дужки. 
Щоб викликати функцію, потрібно: 1) ввести ім'я функції й додати дужки; 2) у дужках перелічити аргументи функції — значення, які треба присвоїти формальним параметрам. Якщо формальних параметрів немає, то при виклику після імені функції потрібно писати порожні дужки.

2. Що таке оператор return в JavaScript? Як його використовувати в функціях?
2. Оператор return завершает выполнение текущей функции и возвращает её значение. Оператор return завершает выполнение текущей функции и возвращает её значение.

3. Що таке параметри та аргументи в функіях та в яких випадках вони використовуються?
3. Параметр – це змінна між дужками функції (використовується під час оголошення функції) Аргумент – це значення, передане в функцію під час її виклику (використовується під час виконання функції).

4. Як передати функцію аргументом в іншу функцію?
4. Приклад: 
function firstFunction(argument) {
    console.log("Викликано першу функцію з аргументом:", argument);
}

// Оголошення функції, яка приймає функцію як аргумент
function secondFunction(function) {
    console.log("Викликається друга функція");
    function;
}

secondFunction(firstFunction(argument));

Практичні завдання
1. Напишіть функцію, яка повертає частку двох чисел. Виведіть результат роботи функції в консоль.

2. Завдання: Реалізувати функцію, яка виконуватиме математичні операції з введеними користувачем числами.

Технічні вимоги:
- Отримати за допомогою модального вікна браузера два числа. Провалідувати отримані значення(перевірити, що отримано числа). Якщо користувач ввів не число, запитувати до тих пір, поки не введе число
- Отримати за допомогою модального вікна браузера математичну операцію, яку потрібно виконати. Сюди може бути введено +, -, *, /. Провалідувати отримане значення. Якщо користувач ввів не передбачене значення, вивести alert('Такої операції не існує').
- Створити функцію, в яку передати два значення та операцію.
- Вивести у консоль результат виконання функції.

3. Опціонально. Завдання: 
Реалізувати функцію підрахунку факторіалу числа. 
Технічні вимоги:
- Отримати за допомогою модального вікна браузера число, яке введе користувач.
- За допомогою функції порахувати факторіал числа, яке ввів користувач і вивести його на екран.
- Використовувати синтаксис ES6 для роботи зі змінними та функціями.

// 1.

const showDivisionRsult = (num1, num2) => num1 / num2;
console.log(showDivisionRsult(10, 5));

*/

// 2.

// const showMathOperation = (
//     num1 = getFirstNumber(),
//     num2 = getSecondNumber(),
//     operator
// ) => {
//     console.log(getMathOperator(num1, num2, operator));
// };

// const getFirstNumber = () => {
//     let num1 = prompt("Введіть перше число");

//     while (isNaN(num1) || num1 === null || num1 === "") {
//         alert("Введено не число");
//         getFirstNumber();
//     }

//     return +num1;
// };

// const getSecondNumber = () => {
//     let num2 = prompt("Введіть друге число");

//     while (isNaN(num2) || num2 === null || num2 === "") {
//         alert("Введено не число");
//         getFirstNumber();
//     }

//     return +num2;
// };

// const getMathOperator = (num1, num2, operator) => {
//     operator = prompt("Введіть операцію");

//     switch (operator) {
//         case "+":
//             alert(num1 + num2);
//             console.log(num1 + num2);
//         case "-":
//             alert(num1 - num2);
//             console.log(num1 - num2);
//         case "*":
//             alert(num1 * num2);
//             console.log(num1 * num2);
//         case "/":
//             alert(num1 / num2);
//             console.log(num1 / num2);
//         default:
//             alert('Такої операції не існує');
//             getMathOperator();
//     }
// };

// showMathOperation();

// 3.

// let factorial = 1;
// let i = 1;

// const getFactorial = (num) => {
//     if (i === num) {
//         console.log(factorial);
//     } else {
//         i++;
//         factorial *= i;
//         getFactorial(num);
//     }
// };

// const userNumber = +prompt("Введіть число");
// getFactorial(userNumber);
